{"version":3,"file":"main.ef6e2b57c783af4c4a06.bundle.js","sources":["webpack:///../spark/components/accordions/react/SprkAccordionItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport AnimateHeight from 'react-animate-height';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport SprkIcon from '../../icons/react/SprkIcon';\nimport SprkLink from '../../../base/links/react/SprkLink';\n\nclass SprkAccordionItem extends Component {\n  constructor(props) {\n    super(props);\n    const { isDefaultOpen } = this.props;\n    this.state = {\n      isOpen: isDefaultOpen || false,\n      height: isDefaultOpen ? 'auto' : 0,\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(e) {\n    const { onToggle } = this.props;\n    e.preventDefault();\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n      height: !prevState.isOpen ? 'auto' : 0,\n    }));\n    if (onToggle) onToggle(e);\n  }\n\n  render() {\n    const {\n      analyticsString,\n      idString,\n      children,\n      heading,\n      headingAddClasses,\n      additionalClasses,\n      contentAddClasses,\n      iconAddClasses,\n      isDefaultOpen,\n      id,\n      ...other\n    } = this.props;\n    const { isOpen, height } = this.state;\n\n    const iconClasses = classnames(\n      'sprk-c-Icon--l sprk-c-Icon--toggle sprk-c-Accordion__icon',\n      { 'sprk-c-Icon--open': isOpen },\n      iconAddClasses,\n    );\n\n    const itemClassNames = classnames(\n      'sprk-c-Accordion__item',\n      { 'sprk-c-Accordion__item--open': isOpen },\n      additionalClasses,\n    );\n\n    const headingClassNames = classnames(\n      'sprk-c-Accordion__heading',\n      'sprk-b-TypeDisplaySeven',\n      headingAddClasses,\n    );\n\n    return (\n      <li className={itemClassNames} data-id={idString} {...other}>\n        <SprkLink\n          variant=\"unstyled\"\n          aria-controls={id}\n          additionalClasses=\"sprk-c-Accordion__summary\"\n          data-analytics={analyticsString}\n          onClick={this.toggle}\n          aria-expanded={isOpen ? 'true' : 'false'}\n        >\n          <h3 className={headingClassNames}>{heading}</h3>\n          <SprkIcon\n            iconName=\"chevron-up-circle-two-color\"\n            additionalClasses={iconClasses}\n          />\n        </SprkLink>\n\n        <AnimateHeight duration={300} height={height}>\n          <div\n            className={classnames(\n              'sprk-c-Accordion__content',\n              contentAddClasses,\n            )}\n            id={id}\n          >\n            {children}\n          </div>\n        </AnimateHeight>\n      </li>\n    );\n  }\n}\n\nSprkAccordionItem.defaultProps = {\n  isDefaultOpen: false,\n};\n\nSprkAccordionItem.propTypes = {\n  // Content for the item\n  children: PropTypes.node,\n  // Value for the data-analytics attribute on the accordion trigger\n  analyticsString: PropTypes.string,\n  // The item heading\n  heading: PropTypes.string.isRequired,\n  // Additional classes for the heading\n  headingAddClasses: PropTypes.string,\n  // Additional classes for the item\n  additionalClasses: PropTypes.string,\n  // The data-id value for the accordion item\n  idString: PropTypes.string,\n  // Used to specify whether the item should be open by default\n  isDefaultOpen: PropTypes.bool,\n  // Additional classes for the toggle icon\n  iconAddClasses: PropTypes.string,\n  // Additional classes for the toggle content\n  contentAddClasses: PropTypes.string,\n};\n\nexport default SprkAccordionItem;\n"],"mappings":"AAOA","sourceRoot":""}